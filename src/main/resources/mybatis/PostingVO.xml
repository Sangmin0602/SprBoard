<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Posting">
	<resultMap type="BoardBean" id="BoardBeanMap">
		<result column="num" property="num"/>
		<result column="writer"  property="writer"/>
		<result column="email" property="email"/>
		<result column="subject" property="subject"/>
		<result column="passwd" property="passwd"/>
		<result column="reg_date" property="reg_date"/>
		<result column="readcount" property="readcount"/>
		<result column="ref" property="ref"/>
		<result column="re_step" property="re_step"/>
		<result column="re_level" property="re_level"/>
		<result column="content" property="content"/>
		<result column="ip" property="ip"/>
	</resultMap>
	
	<resultMap type="Posting" id="fullPostingMap">
		<constructor>
		<!-- Integer seq, 
			String title, 
			String content, 
			Integer viewCount,
			String whenCreated
			boolean deleted -->
			<idArg javaType="integer" column="seq"/>
			<arg javaType="string" column="title"/>
			<arg javaType="string" column="content"/>
			<arg javaType="integer" column="views"/>
			<arg javaType="string" column="when_created"/>
			<arg javaType="boolean" column="deleted"/>
		</constructor>
		<association property="writer" column="fk_writer" select="User.userBySeq"/>
	</resultMap>
	
	<select id="findAll" resultMap="fullPostingMap">
		SELECT 
			seq, 
			title, 
			content, 
			views, 
			when_created,
			deleted, 
			fk_writer 
		FROM postings
	</select>
	
	<select id="findByRange" parameterType="hashmap" resultMap="fullPostingMap">
		SELECT 
			seq, 
			title, 
			content, 
			views, 
			when_created,
			deleted, 
			fk_writer 
		FROM postings
		ORDER BY when_created DESC
		LIMIT #{start}, #{size}
	</select>
	
	<select id="countAllPostings" resultType="integer">
		SELECT count(seq) from postings
	</select>
	<!-- pk(seq)값으로 찾음 -->
	<select id="findBySeq" parameterType="int" resultMap="fullPostingMap">
		SELECT 
			seq,
			title,
			content,
			views,
			when_created,
			deleted,
			fk_writer 
		FROM postings WHERE seq = #{id}
	</select>
	
	<!-- 새로운 글 삽입 -->
	<!-- keyProperty : db에서 생성된 pk를 setting할 자바 필드 이름-->
	<!-- keyColumn   : PostgreSQL 에서 필요함. 일단 넣어줌-->
	<insert 
		id="newPosting" 
		parameterType="Posting" 
		useGeneratedKeys="true" 
		keyColumn="seq" 
		keyProperty="seq" >
	INSERT INTO postings (title, content, fk_writer) 
	VALUES (#{title}, #{content}, #{writer.seq})
	</insert>
	
	<update id="updateViewCount" parameterType="hashmap">
		UPDATE postings SET views = #{viewCount} WHERE seq = #{postingId}
	</update>
	
	<select id = "ViewListCount"  resultType="integer">
		select count(*) from board
	</select>
	
	<!-- ListAction  
	<select id = "ViewListCount"  resultMap ="int">
		select count(*) from board
	</select>
	
	무조건 ResultMap 을 사용해야하는지
	
	-->
	<!--<select id = "ViewList" parameterType = "hashmap" resultType="BeanClass">-->
	 <select id = "ViewList" parameterType = "hashmap" resultMap ="BoardBeanMap"> 
		select * from board2 order by ref desc, re_step asc limit #{startRow},#{pageSize}
	</select>
	
	<insert 
		id="WritePro" 
		parameterType="BoardBean" 
		useGeneratedKeys="true" 
		keyColumn="num" 
		keyProperty="num" >
		INSERT INTO board2 (num, writer, email,subject,passwd,
		reg_date,readcount,ref,re_step,re_level,content,ip) 
		VALUES (#{num}, #{writer},#{email},#{subject}, #{passwd}, 
		#{reg_date},#{readcount},#{ref},#{re_step},#{re_level},#{content},#{ip})
	</insert>
	
	<update id="updateReadCnt" parameterType="hashmap">
		update board2 set readcount=readcount+1 where num = #{num}
	</update>
	
	<select id= "article" parameterType="int" resultMap="BoardBeanMap">
		select * from board2 where num = #{num}
	</select>
	
	<select id= "getPasswd" parameterType="int" resultMap="BoardBeanMap">
		select passwd from board2 where num = #{num}
	</select>
	
	<update id = "UpdateContent" parameterType="hashmap">
		update board2 set writer=#{writer},email=#{email},subject=#{subject},
		passwd=#{passwd},content=#{content} where num=#{num}	
	</update>
	
	<delete id="deleteArticle" parameterType="int">
		delete from board2 where num = #{num}
	</delete>
	
	<delete id="checkAsDeleted">
		UPDATE postings
		SET deleted = 'Y'
		WHERE seq IN
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
			#{item}
		</foreach> 
	</delete>
	
</mapper>